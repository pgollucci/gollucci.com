name: deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      secrets: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: $AWS_REGION
          role-to-assume: $AWS_ROLE
          role-session-name: $AWS_SESSION_NAME
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ROLE: ${{ secrets.AWS_ROLE }}
          AWS_SESSION_NAME: ${{ secrets.AWS_SESSION_NAME }}

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Build project
        run: pnpm build

      - name: Sync to S3
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: aws s3 sync out s3://$BUCKET_NAME --no-progress --follow-symlinks --delete --region $AWS_REGION

      - name: Invalidate CloudFront Cache
        uses: chetan/invalidate-cloudfront-action@v2
        with:
          distribution-id: $CLOUDFRONT_DISTRIBUTION_ID
          paths: '/*'
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
